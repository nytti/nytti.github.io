// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ArticleList /> <ArticleList /> empty snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleListWrapper
    articles={Array []}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    topic="fashion"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "variant": "headline",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "variant": "headline",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ArticleList /> <ArticleList /> snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleListWrapper
    articles={
      Array [
        "Item-Id-Test",
      ]
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    topic="fashion"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <WithStyles(Grid)
        container={true}
        spacing={16}
      >
        <WithStyles(Grid)
          item={true}
          lg={4}
          md={6}
          sm={12}
          xl={4}
          xs={12}
        >
          <Connect(ArticleWrapper)
            component={[Function]}
            id="Item-Id-Test"
            topic="fashion"
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Grid)
            item={true}
            lg={4}
            md={6}
            sm={12}
            xl={4}
            xs={12}
          >
            <Connect(ArticleWrapper)
              component={[Function]}
              id="Item-Id-Test"
              topic="fashion"
            />
          </WithStyles(Grid)>,
        ],
        "container": true,
        "spacing": 16,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "Item-Id-Test",
          "nodeType": "class",
          "props": Object {
            "children": <Connect(ArticleWrapper)
              component={[Function]}
              id="Item-Id-Test"
              topic="fashion"
            />,
            "item": true,
            "lg": 4,
            "md": 6,
            "sm": 12,
            "xl": 4,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "Item-Id-Test",
              "topic": "fashion",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <WithStyles(Grid)
          container={true}
          spacing={16}
        >
          <WithStyles(Grid)
            item={true}
            lg={4}
            md={6}
            sm={12}
            xl={4}
            xs={12}
          >
            <Connect(ArticleWrapper)
              component={[Function]}
              id="Item-Id-Test"
              topic="fashion"
            />
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Grid)
              item={true}
              lg={4}
              md={6}
              sm={12}
              xl={4}
              xs={12}
            >
              <Connect(ArticleWrapper)
                component={[Function]}
                id="Item-Id-Test"
                topic="fashion"
              />
            </WithStyles(Grid)>,
          ],
          "container": true,
          "spacing": 16,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "Item-Id-Test",
            "nodeType": "class",
            "props": Object {
              "children": <Connect(ArticleWrapper)
                component={[Function]}
                id="Item-Id-Test"
                topic="fashion"
              />,
              "item": true,
              "lg": 4,
              "md": 6,
              "sm": 12,
              "xl": 4,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "Item-Id-Test",
                "topic": "fashion",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
